name: Trigger-Rules-POC-Build

on:
  workflow_dispatch:
  push:
    branches:
      - '**'

jobs:
  update-algolia:
      uses: ./.github/workflows/update-algolia-index.yml
      secrets: inherit

  trigger-deploy:
    needs: update-algolia
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN:   ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT: ${{ secrets.VERCEL_PROJECT }}
      VERCEL_TEAM:    ${{ secrets.VERCEL_TEAM }}
      REPO_ID:        ${{ secrets.WEBSITE_REPO_ID }}

    steps:
      # 1 Decide deployment target + pass content branch
      - id: vars
        run: |
          if [[ "$GITHUB_REF_NAME" == "main" ]]; then
            echo "VERCEL_TARGET=production" >> $GITHUB_OUTPUT
          else
            echo "VERCEL_TARGET=staging" >> $GITHUB_OUTPUT
          fi
          echo "TINA_BRANCH=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT

      # 2 Trigger Vercel deployment
      - name: Deploy to Vercel (+ branch alias)
        run: |
          TARGET="${{ steps.vars.outputs.VERCEL_TARGET }}"
          BRANCH="${{ steps.vars.outputs.TINA_BRANCH }}"

          # --- 1 trigger deployment (same logic you had) ----------------
          if [ "$TARGET" = "production" ]; then
            response=$(curl -s -X POST "https://api.vercel.com/v13/deployments" \
              -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d '{
                "name": "'"${{ secrets.VERCEL_PROJECT }}"'",
                "gitSource": { "type":"github", "repoId":'${{ secrets.WEBSITE_REPO_ID }}', "ref":"main" },
                "build": { "env": { "NEXT_PUBLIC_TINA_BRANCH":"'"$BRANCH"'" } },
                "target":"production"
              }')
          else
            response=$(curl -s -X POST "https://api.vercel.com/v13/deployments" \
              -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d '{
                "name": "'"${{ secrets.VERCEL_PROJECT }}"'",
                "gitSource": { "type":"github", "repoId":'${{ secrets.WEBSITE_REPO_ID }}', "ref":"main" },
                "build": { "env": { "NEXT_PUBLIC_TINA_BRANCH":"'"$BRANCH"'" } }
              }')
          fi

          echo "$response" | jq .

          # --- 2 fail fast on API error --------------------------------
          if echo "$response" | grep -q '"error"'; then
            echo "Deployment failed" && exit 1
          fi

          # --- 3 preview-only: create clean alias ----------------------
          if [ "$TARGET" != "production" ]; then
            DEPLOY_ID=$(echo "$response" | jq -r '.id')
            slug=$(echo "$BRANCH" | tr '[:upper:]' '[:lower:]' | sed -E 's#[^a-z0-9]+#-#g')
            alias="${{ secrets.VERCEL_PROJECT }}-${slug}.vercel.app"

            curl -s -X POST \
              "https://api.vercel.com/v2/deployments/${DEPLOY_ID}/aliases?teamId=${{ secrets.VERCEL_TEAM }}" \
              -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d "{\"alias\":\"${alias}\"}"

            echo "Alias created → ${alias}"
          fi