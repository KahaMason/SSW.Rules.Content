name: Trigger-Rules-POC-Build

on:
  workflow_dispatch:
  push:
    branches:
      - '**'

jobs:
  update-algolia:
      uses: ./.github/workflows/update-algolia-index.yml
      secrets: inherit

  trigger-deploy:
    needs: update-algolia
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN:   ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT: ${{ secrets.VERCEL_PROJECT }}
      VERCEL_TEAM:    ${{ secrets.VERCEL_TEAM }}
      REPO_ID:        ${{ secrets.WEBSITE_REPO_ID }}

    steps:
      # 1 Decide deployment target + pass content branch
      - id: vars
        run: |
          if [[ "$GITHUB_REF_NAME" == "main" ]]; then
            echo "VERCEL_TARGET=production" >> $GITHUB_OUTPUT
          else
            echo "VERCEL_TARGET=staging" >> $GITHUB_OUTPUT
          fi
          echo "TINA_BRANCH=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT

      # 2 Trigger Vercel deployment
      - name: Deploy to Vercel
        run: |
          # Clean branch name for URL (replace special chars with hyphens)
          CLEAN_BRANCH=$(echo "${{ steps.vars.outputs.TINA_BRANCH }}" | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]')
          
          if [[ "${{ steps.vars.outputs.VERCEL_TARGET }}" == "production" ]]; then
            # Production deployment
            response=$(curl -s -X POST "https://api.vercel.com/v13/deployments" \
              -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d '{
                "name": "${{ secrets.VERCEL_PROJECT }}",
                "gitSource": {
                  "type": "github",
                  "repoId": "${{ secrets.WEBSITE_REPO_ID }}",
                  "ref": "main"
                },
                "build": {
                  "env": {
                    "NEXT_PUBLIC_TINA_BRANCH": "${{ steps.vars.outputs.TINA_BRANCH }}"
                  }
                },
                "target": "production"
              }')
          else
            # Preview deployment with custom alias
            response=$(curl -s -X POST "https://api.vercel.com/v13/deployments" \
              -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d '{
                "name": "${{ secrets.VERCEL_PROJECT }}",
                "gitSource": {
                  "type": "github",
                  "repoId": "${{ secrets.WEBSITE_REPO_ID }}",
                  "ref": "main"
                },
                "build": {
                  "env": {
                    "NEXT_PUBLIC_TINA_BRANCH": "${{ steps.vars.outputs.TINA_BRANCH }}"
                  }
                },
                "alias": ["'${CLEAN_BRANCH}'-${{ secrets.VERCEL_PROJECT }}.vercel.app"]
              }')
          fi
          
          echo "Vercel API Response:"
          echo "$response"
          
          # Check if response contains error
          if echo "$response" | grep -q '"error"'; then
            echo "Deployment failed"
            exit 1
          else
            echo "Deployment triggered successfully"
          fi